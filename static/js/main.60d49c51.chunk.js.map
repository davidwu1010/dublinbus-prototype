{"version":3,"sources":["components/left-drawer/left-drawer.component.jsx","redux/drawer/drawer.selectors.js","redux/user/user.types.js","redux/user/user.actions.js","redux/user/user.selectors.js","components/header/header.component.jsx","redux/planner/planner.selector.js","redux/planner/planner.types.js","redux/planner/planner.actions.js","components/map-container/map-container.component.jsx","components/form-input/form-input.component.jsx","components/route-card/route-card.component.jsx","components/routes-list/routes-list.component.jsx","components/planner/planner.component.jsx","pages/homepage/homepage.component.jsx","pages/sign-up/sign-up.component.jsx","pages/sign-in/sign-in.component.jsx","App.js","redux/planner/planner.reducer.js","redux/drawer/drawer.reducer.js","redux/user/user.reducer.js","redux/root-reducer.js","redux/planner/planner.sagas.js","firebase/firebase.utils.js","redux/user/user.sagas.js","redux/root-saga.js","redux/store.js","index.js","redux/drawer/drawer.action.js","redux/drawer/drawer.types.js"],"names":["useStyles","makeStyles","list","width","mapStateToProps","createStructuredSelector","open","selectDrawerOpen","connect","dispatch","toggleDrawer","props","classes","iOS","process","browser","test","navigator","userAgent","Fragment","anchor","onClose","onOpen","disableBackdropTransition","disableDiscovery","className","role","onClick","onKeyDown","button","component","Link","to","primary","createSelector","state","drawer","UserActionTypes","SET_CURRENT_USER","GOOGLE_SIGN_IN_START","EMAIL_SIGN_IN_START","SIGN_IN_SUCCESS","SIGN_IN_FAILURE","CHECK_USER_SESSION","SIGN_OUT_START","SIGN_OUT_SUCCESS","SIGN_OUT_FAILURE","SIGN_UP_START","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","signInFailure","error","type","payload","signUpSuccess","user","additionalData","selectCurrentUser","currentUser","theme","title","textDecoration","color","palette","contrastText","menuButton","marginRight","spacing","signInButton","marginLeft","signOut","AppBar","position","appBar","Toolbar","toolBar","IconButton","edge","Typography","variant","RouterLink","Button","selectPlanner","planner","selectOriginPlaces","originList","selectOriginPredictions","places","map","place","description","selectDestPlaces","destList","selectDestPredictions","selectOrigin","origin","selectDest","dest","selectDirections","directions","selectRoutes","routes","selectPolylines","route","overview_path","path","lat","lng","selectSelectedRoute","selectedRoute","PlannerActionTypes","AUTOCOMPLETE_START","AUTOCOMPLETE_SUCCESS","AUTOCOMPLETE_FAILURE","SET_ORIGIN","SET_DEST","DIRECTIONS_START","DIRECTIONS_SUCCESS","DIRECTIONS_FAILURE","SWITCH_AUTOCOMPLETE_OPTIONS","SELECT_ROUTE","autocompleteSuccess","source","selectRoute","routeId","containerStyle","height","zIndex","center","polylines","google","window","initialCenter","zoom","disableDefaultUI","polyline","index","key","strokeColor","strokeWeight","card","padding","input","switchButton","right","top","submitButton","originPredictions","destPredictions","startAutocomplete","autocompleteStart","setOrigin","setDest","startDirections","directionsStart","switchAutocompleteOptions","Card","Fab","switchOriginDest","Grid","container","direction","alignItems","item","Autocomplete","freeSolo","options","inputValue","renderInput","params","TextField","label","onInputChange","event","value","id","defaultValue","dayjs","format","InputLabelProps","shrink","clsx","pContainer","display","flexDirection","p","RouteCard","steps","clickHandler","CardActionArea","step","instructions","travel_mode","transit","line","short_name","stepToDescription","routeID","legs","Planner","paperContainer","overflowX","overflowY","breakpoints","down","overflow","HomePage","Paper","elevation","Hidden","xsDown","paper","marginTop","avatar","margin","backgroundColor","secondary","main","form","submit","signUpStart","userCredentials","useState","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","handleChange","target","name","Container","maxWidth","Avatar","onSubmit","console","log","preventDefault","displayName","xs","sm","autoComplete","required","fullWidth","autoFocus","onChange","justify","href","googleSignInStart","emailSignInStart","checkUserSession","useEffect","CssBaseline","exact","render","INITIAL_STATE","plannerReducer","action","temp","drawerReducer","DrawerActionTypes","TOGGLE_DRAWER","userReducer","persistConfig","storage","whitelist","rootReducer","combineReducers","persistReducer","autocomplete","getDirections","onAutoCompleteStart","onDirectionsStart","plannerSagas","put","service","maps","AutocompleteService","promise","Promise","resolve","reject","getPlacePredictions","location","LatLng","radius","predictions","status","PlacesServiceStatus","OK","response","filter","includes","directionsService","DirectionsService","destination","travelMode","provideRouteAlternatives","transitOptions","modes","region","call","takeLatest","all","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","createUserProfileDocument","userAuth","a","userRef","firestore","doc","uid","get","exists","createdAt","Date","set","message","auth","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","getSnapshotFromUserAuth","signInWithGoogle","signInWithEmail","isUserAuthenticated","signUp","signInAfterSignUp","onGoogleSignInStart","onEmailSignInStart","onCheckUserSession","onSignOutStart","onSignUpStart","onSignUpSuccess","userSagas","userSnapshot","data","signInWithPopup","signInWithEmailAndPassword","unsubscribe","onAuthStateChanged","createUserWithEmailAndPassword","rootSaga","sagaMiddleware","createSagaMiddleware","middlewares","store","createStore","applyMiddleware","run","persistor","persistStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.60d49c51.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport { selectDrawerOpen } from '../../redux/drawer/drawer.selectors';\nimport { toggleDrawer } from '../../redux/drawer/drawer.action';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport BookmarksIcon from '@material-ui/icons/Bookmarks';\nimport DirectionsBusIcon from '@material-ui/icons/DirectionsBus';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  }\n});\n\nfunction LeftDrawer(props) {\n  const { open, toggleDrawer } = props;\n\n  const classes = useStyles();\n\n  const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n\n  const list = () => (\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      onClick={toggleDrawer}\n      onKeyDown={toggleDrawer}\n    >\n      <List>\n        <ListItem button component={Link} to=\"/\">\n          <ListItemIcon>\n            <DirectionsBusIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Planner\" />\n        </ListItem>\n        <ListItem button component={Link} to=\"/saved\">\n          <ListItemIcon>\n            <BookmarksIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Saved\" />\n        </ListItem>\n        <ListItem button component={Link} to=\"/timetables\">\n          <ListItemIcon>\n            <AccessTimeIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Timetables\" />\n        </ListItem>\n      </List>\n      <Divider />\n    </div>\n  );\n\n  return (\n      <React.Fragment>\n        <SwipeableDrawer\n          anchor={'left'}\n          open={open}\n          onClose={toggleDrawer}\n          onOpen={toggleDrawer}\n          disableBackdropTransition={!iOS}\n          disableDiscovery={iOS}\n        >\n          {list()}\n        </SwipeableDrawer>\n      </React.Fragment>\n  );\n}\n\nconst mapStateToProps = createStructuredSelector({\n  open: selectDrawerOpen\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleDrawer: () => dispatch(toggleDrawer())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LeftDrawer);","import { createSelector } from 'reselect';\n\nconst selectDrawer = state => state.drawer;\n\nexport const selectDrawerOpen = createSelector(\n  [selectDrawer],\n  drawer => drawer.open\n);","const UserActionTypes = {\n  SET_CURRENT_USER: 'SET_CURRENT_USER',\n  GOOGLE_SIGN_IN_START: 'GOOGLE_SIGN_IN_START',\n  EMAIL_SIGN_IN_START: 'EMAIL_SIGN_IN_START',\n  SIGN_IN_SUCCESS: 'SIGN_IN_SUCCESS',\n  SIGN_IN_FAILURE: 'SIGN_IN_FAILURE',\n  CHECK_USER_SESSION: 'CHECK_USER_SESSION',\n  SIGN_OUT_START: 'SIGN_OUT_START',\n  SIGN_OUT_SUCCESS: 'SIGN_OUT_SUCCESS',\n  SIGN_OUT_FAILURE: 'SIGN_OUT_FAILURE',\n  SIGN_UP_START: 'SIGN_UP_START',\n  SIGN_UP_SUCCESS: 'SIGN_UP_SUCCESS',\n  SIGN_UP_FAILURE: 'SIGN_UP_FAILURE'\n};\n\nexport default UserActionTypes;\n","import UserActionTypes from './user.types';\n\nexport const googleSignInStart = () => ({\n  type: UserActionTypes.GOOGLE_SIGN_IN_START\n});\n\nexport const signInSuccess = user => ({\n  type: UserActionTypes.SIGN_IN_SUCCESS,\n  payload: user\n});\n\nexport const signInFailure = error => ({\n  type: UserActionTypes.SIGN_IN_FAILURE,\n  payload: error\n});\n\nexport const emailSignInStart = emailAndPassword => ({\n  type: UserActionTypes.EMAIL_SIGN_IN_START,\n  payload: emailAndPassword\n});\n\nexport const checkUserSession = () => ({\n  type: UserActionTypes.CHECK_USER_SESSION\n});\n\nexport const signOutStart = () => ({\n  type: UserActionTypes.SIGN_OUT_START\n});\n\nexport const signOutSuccess = () => ({\n  type: UserActionTypes.SIGN_OUT_SUCCESS\n});\n\nexport const signOutFailure = error => ({\n  type: UserActionTypes.SIGN_OUT_FAILURE,\n  payload: error\n});\n\nexport const signUpStart = userCredentials => ({\n  type: UserActionTypes.SIGN_UP_START,\n  payload: userCredentials\n});\n\nexport const signUpSuccess = ({ user, additionalData }) => ({\n  type: UserActionTypes.SIGN_UP_SUCCESS,\n  payload: { user, additionalData }\n});\n\nexport const signUpFailure = error => ({\n  type: UserActionTypes.SIGN_UP_FAILURE,\n  payload: error\n});\n","import { createSelector } from 'reselect';\n\nconst selectUser = state => state.user;\n\nexport const selectCurrentUser = createSelector(\n  [selectUser],\n  user => user.currentUser\n);\n","import React from 'react';\nimport { AppBar, IconButton, Toolbar, Typography, makeStyles } from '@material-ui/core';\nimport  MenuIcon from '@material-ui/icons/Menu';\nimport Button from '@material-ui/core/Button';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { toggleDrawer } from '../../redux/drawer/drawer.action';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { signOutStart } from '../../redux/user/user.actions';\nimport { selectCurrentUser } from '../../redux/user/user.selectors';\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    textDecoration: 'none',\n    color: theme.palette.primary.contrastText\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  signInButton: {\n    marginLeft: 'auto'\n  }\n}));\n\nfunction Header(props) {\n  const { toggleDrawer, currentUser, signOut } = props;\n\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar className={classes.toolBar}>\n          <IconButton edge=\"start\" className={classes.menuButton} onClick={toggleDrawer}>\n            <MenuIcon />\n          </IconButton>\n        <Typography variant=\"h6\" className={classes.title} component={RouterLink} to=\"/\">Dublin Bus</Typography>\n        { currentUser ?\n          <Button color=\"inherit\" className={classes.signInButton} onClick={signOut}  >Sign Out</Button>\n          :<Button color=\"inherit\" className={classes.signInButton} component={RouterLink} to=\"/sign-in\">Sign In</Button>\n        }\n      </Toolbar>\n    </AppBar>\n      <Toolbar />\n    </React.Fragment>\n  );\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleDrawer: () => dispatch(toggleDrawer()),\n  signOut: () => dispatch(signOutStart())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import { createSelector } from 'reselect';\n\nconst selectPlanner = state => state.planner;\n\nexport const selectOriginPlaces = createSelector(\n  [selectPlanner],\n  planner => planner.originList\n);\n\nexport const selectOriginPredictions = createSelector(\n  [selectOriginPlaces],\nplaces => places.map(place => place.description)\n);\n\nexport const selectDestPlaces = createSelector(\n  [selectPlanner],\n  planner => planner.destList\n);\n\nexport const selectDestPredictions = createSelector(\n  [selectDestPlaces],\n  places => places.map(place => place.description)\n);\n\nexport const selectOrigin = createSelector(\n  [selectPlanner],\n  planner => planner.origin\n);\n\nexport const selectDest = createSelector(\n  [selectPlanner],\n  planner => planner.dest\n);\n\nexport const selectDirections = createSelector(\n  [selectPlanner] ,\n  planner => planner.directions\n);\n\nexport const selectRoutes = createSelector(\n  [selectDirections],\n  directions => (directions ? directions.routes : [])\n);\n\nexport const selectPolylines = createSelector(\n  [selectRoutes],\n  routes => routes.map(route => route.overview_path.map(path => ({ lat: path.lat(), lng: path.lng() })))\n);\n\nexport const selectSelectedRoute = createSelector(\n  [selectPlanner],\n  planner => planner.selectedRoute\n);","const PlannerActionTypes = {\n  AUTOCOMPLETE_START: 'AUTOCOMPLETE_START',\n  AUTOCOMPLETE_SUCCESS: 'AUTOCOMPLETE_SUCCESS',\n  AUTOCOMPLETE_FAILURE: 'AUTOCOMPLETE_FAILURE',\n  SET_ORIGIN: 'SET_ORIGIN',\n  SET_DEST: 'SET_DEST',\n  DIRECTIONS_START: 'DIRECTIONS_START',\n  DIRECTIONS_SUCCESS: 'DIRECTIONS_SUCCESS',\n  DIRECTIONS_FAILURE: 'DIRECTIONS_FAILURE',\n  SWITCH_AUTOCOMPLETE_OPTIONS: 'SWITCH_AUTOCOMPLETE_OPTIONS',\n  SELECT_ROUTE: 'SELECT_ROUTE'\n};\n\nexport default PlannerActionTypes;","import PlannerActionTypes from './planner.types';\n\nexport const autocompleteStart = (input, source) => ({\n  type: PlannerActionTypes.AUTOCOMPLETE_START,\n  payload: { input, source }\n});\n\nexport const autocompleteSuccess = (places, source) => ({\n  type: PlannerActionTypes.AUTOCOMPLETE_SUCCESS,\n  payload: { places, source }\n});\n\nexport const autocompleteFailure = error => ({\n  type: PlannerActionTypes.AUTOCOMPLETE_FAILURE,\n  payload: error\n});\n\nexport const setOrigin = origin => ({\n  type: PlannerActionTypes.SET_ORIGIN,\n  payload: origin\n});\n\nexport const setDest = dest => ({\n  type: PlannerActionTypes.SET_DEST,\n  payload: dest\n});\n\nexport const directionsStart = (origin, dest) => ({\n  type: PlannerActionTypes.DIRECTIONS_START,\n  payload: {\n    origin: origin,\n    dest: dest\n  }\n});\n\nexport const directionsSuccess = directions => ({\n  type: PlannerActionTypes.DIRECTIONS_SUCCESS,\n  payload: directions\n});\n\nexport const directionsFailure = error => ({\n  type: PlannerActionTypes.DIRECTIONS_START,\n  payload: error\n});\n\nexport const switchAutocompleteOptions = () => ({\n  type: PlannerActionTypes.SWITCH_AUTOCOMPLETE_OPTIONS\n});\n\nexport const selectRoute = routeId => ({\n  type: PlannerActionTypes.SELECT_ROUTE,\n  payload: routeId\n});\n","import React from 'react';\n\n// import { GoogleMap, LoadScript } from '@react-google-maps/api';\nimport { GoogleApiWrapper, Map, Polyline } from 'google-maps-react';\nimport { createStructuredSelector } from 'reselect';\nimport { selectPolylines, selectSelectedRoute } from '../../redux/planner/planner.selector';\nimport { connect } from 'react-redux';\nimport { selectRoute } from '../../redux/planner/planner.actions';\n\n// const apiKey = 'AIzaSyBPyIqf7hOMSCjqSq--50UKiJ9Xzmbssmk';\n\nconst containerStyle = {\n  position: 'fixed',\n  height: '100vh',\n  width: '100vw',\n  zIndex: -1\n};\n\nconst center = {\n  lat: 53.3363,\n  lng: -6.2769\n};\n\n\nfunction MapContainer(props) {\n  const { polylines, selectRoute, selectedRoute } = props;\n  return(\n    <Map google={window.google} containerStyle={containerStyle} initialCenter={center} zoom={13} disableDefaultUI={true}>\n      { polylines.map((polyline, index) => <Polyline key={index} path={polyline} zIndex={index === selectedRoute ? 1 : 0} strokeColor={index === selectedRoute ? '#669DF6' : '#BBBDBF'} strokeWeight={6} onClick={() => selectRoute(index)}/>) }\n    </Map>\n  );\n}\n\nconst mapStateToProps = createStructuredSelector({\n  polylines: selectPolylines,\n  selectedRoute: selectSelectedRoute\n});\n\nconst mapDispatchToProps = dispatch => ({\n  selectRoute: routeId => dispatch(selectRoute(routeId)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MapContainer);\n","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport ImportExportIcon from '@material-ui/icons/ImportExport';\nimport Button from '@material-ui/core/Button';\nimport { connect } from 'react-redux';\nimport {\n  autocompleteStart,\n  setDest,\n  setOrigin,\n  directionsStart,\n  switchAutocompleteOptions\n} from '../../redux/planner/planner.actions';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { createStructuredSelector } from 'reselect';\nimport {\n  selectDest, selectDestPredictions,\n  selectOrigin,\n  selectOriginPredictions,\n} from '../../redux/planner/planner.selector';\nimport Card from '@material-ui/core/Card';\nimport Fab from '@material-ui/core/Fab';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport * as dayjs from 'dayjs';\n\nconst useStyles = makeStyles({\n  card: {\n    padding: '16px 0'\n  },\n  input: {\n    width: '340px',\n  },\n  switchButton: {\n    position: 'absolute',\n    right: '7px',\n    top: '50px',\n    zIndex: 1\n  },\n  submitButton: {\n    height: '56px'\n  }\n});\n\nfunction FormInput(props) {\n  const {\n          startAutocomplete,\n          setOrigin,\n          setDest,\n          originPredictions,\n          destPredictions,\n          startDirections,\n          origin,\n          dest,\n          switchAutocompleteOptions\n        } = props;\n\n  const classes = useStyles();\n\n  function localTimeToISOString() {\n    return dayjs().format('YYYY-MM-DDTHH:mm:ss');\n  }\n\n  function originHandler(event, value) {\n    setOrigin(value);\n    startAutocomplete(value, 'origin');\n  }\n\n  function destHandler(event, value) {\n    setDest(value);\n    startAutocomplete(value, 'dest');\n  }\n\n  function switchOriginDest(origin, dest) {\n    setDest(origin);\n    setOrigin(dest);\n    switchAutocompleteOptions();\n  }\n\n  return (\n    <Card variant=\"outlined\" className={classes.card}>\n      <Fab color=\"primary\" className={classes.switchButton} onClick={() => switchOriginDest(origin, dest)}>\n        <ImportExportIcon />\n      </Fab>\n      <Grid container direction=\"column\" alignItems=\"center\" spacing={1}>\n        <Grid item>\n          <Autocomplete\n            freeSolo\n            options={originPredictions}\n            inputValue={origin}\n            renderInput={params => <TextField {...params} label=\"Origin\" variant=\"outlined\" />}\n            onInputChange={originHandler}\n            className={classes.input}\n          />\n        </Grid>\n        <Grid item>\n          <Autocomplete\n            freeSolo\n            options={destPredictions}\n            inputValue={dest}\n            renderInput={params => <TextField {...params} label=\"Destination\" variant=\"outlined\" />}\n            onInputChange={destHandler}\n            className={classes.input}\n          />\n        </Grid>\n        <Grid item>\n          <TextField\n            id=\"datetime-local\"\n            label=\"Depart at\"\n            type=\"datetime-local\"\n            defaultValue={localTimeToISOString()}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            variant=\"outlined\"\n            className={classes.input}\n          />\n        </Grid>\n        <Grid item>\n          <Button variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => startDirections(origin, dest)}\n                  className={clsx(classes.input, classes.submitButton)}\n          >\n            Submit\n          </Button>\n        </Grid>\n      </Grid>\n    </Card>\n  );\n}\n\nconst mapStateToProps = createStructuredSelector({\n  originPredictions: selectOriginPredictions,\n  destPredictions: selectDestPredictions,\n  origin: selectOrigin,\n  dest: selectDest\n});\n\nconst mapDispatchToProps = dispatch => ({\n  startAutocomplete: (input, source) => dispatch(autocompleteStart(input, source)),\n  setOrigin: origin => dispatch(setOrigin(origin)),\n  setDest: dest => dispatch(setDest(dest)),\n  startDirections: (origin, dest) => dispatch(directionsStart(origin, dest)),\n  switchAutocompleteOptions: () => dispatch(switchAutocompleteOptions())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormInput);","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  pContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  p: {\n    width: '340px'\n  }\n});\n\nfunction RouteCard(props) {\n  const { steps, clickHandler } = props;\n\n  const classes = useStyles();\n\n  function stepToDescription(step) {\n    let instructions = step.instructions;\n    if (step.travel_mode === 'TRANSIT') {\n      instructions += ', ' + step.transit.line.short_name;\n    }\n    return instructions;\n  }\n\n  return (\n    <Card variant=\"outlined\">\n      <CardActionArea onClick={clickHandler}>\n        <div className={classes.pContainer}>\n        { steps.map((step, index) => (<Typography variant=\"body1\" key={index} className={classes.p}>{stepToDescription(step)}</Typography>)) }\n        </div>\n      </CardActionArea>\n    </Card>\n  );\n}\n\n\nexport default RouteCard;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport Grid from '@material-ui/core/Grid';\nimport RouteCard from '../route-card/route-card.component';\nimport { selectRoutes } from '../../redux/planner/planner.selector';\nimport { selectRoute } from '../../redux/planner/planner.actions';\n\nfunction RoutesList(props) {\n  const { routes, selectRoute } = props;\n  return (\n    <React.Fragment>\n      {routes.map((route, index) => (<Grid item key={index}><RouteCard steps={route.legs[0].steps} clickHandler={() => selectRoute(index)}/> </Grid>))}\n    </React.Fragment>\n  );\n}\n\nconst mapStateToProps = createStructuredSelector({\n  routes: selectRoutes\n});\n\nconst mapDispatchToProps = dispatch => ({\n  selectRoute: routeID => dispatch(selectRoute(routeID))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RoutesList);","import React from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport Grid from '@material-ui/core/Grid';\nimport RoutesList from '../routes-list/routes-list.component';\n\nfunction Planner(props) {\n  return (\n    <Grid container direction=\"column\">\n      <Grid item>\n        <FormInput />\n      </Grid>\n      <RoutesList />\n    </Grid>\n  );\n}\n\nexport default Planner;","import React from 'react';\nimport MapContainer from '../../components/map-container/map-container.component';\nimport Hidden from '@material-ui/core/Hidden';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Planner from '../../components/planner/planner.component';\n\nconst useStyles = makeStyles(theme => ({\n  paperContainer: {\n    position: 'fixed',\n    width: '400px',\n    height: 'calc(100% - 64px)',\n    overflowX: 'hidden',\n    overflowY: 'auto',\n    [theme.breakpoints.down('xs')]: {\n      position: 'relative',\n      width: '100%',\n      height: 'calc(100% - 48px)',\n      overflow: 'visible'\n    }\n  }\n}));\n\nfunction HomePage(props) {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Paper elevation={0} className={classes.paperContainer}>\n        <Planner />\n      </Paper>\n      <Hidden xsDown>\n        <MapContainer />\n      </Hidden>\n    </React.Fragment>\n  );\n}\n\nexport default HomePage;","import React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { emailSignInStart, googleSignInStart, signUpStart } from '../../redux/user/user.actions';\nimport { connect } from 'react-redux';\n\n// This component is adapted from a material-ui template\n// https://github.com/mui-org/material-ui/blob/master/docs/src/pages/getting-started/templates/sign-up/SignUp.js\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction SignUp({ signUpStart }) {\n  const classes = useStyles();\n\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = event => {\n    console.log('shit');\n    event.preventDefault();\n    const displayName = firstName + ' ' + lastName;\n    signUpStart({displayName, email, password });\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    const setState = { firstName: setFirstName, lastName: setLastName, email: setEmail, password: setPassword };\n    setState[name](value);\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} onSubmit={handleSubmit}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n                onChange={handleChange}\n                value={firstName}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                autoComplete=\"lname\"\n                onChange={handleChange}\n                value={lastName}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                onChange={handleChange}\n                value={email}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                onChange={handleChange}\n                value={password}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"#\" variant=\"body2\" component={RouterLink} to=\"/sign-in\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials)),\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","import React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nimport { Link as RouterLink } from 'react-router-dom';\nimport { emailSignInStart, googleSignInStart } from '../../redux/user/user.actions';\nimport { connect } from 'react-redux';\n\n// This component is adapted from a material-ui template\n// https://github.com/mui-org/material-ui/blob/master/docs/src/pages/getting-started/templates/sign-in/SignIn.js\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 0),\n  },\n}));\n\nfunction SignIn({ googleSignInStart, emailSignInStart }) {\n  const classes = useStyles();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  }\n\n  const handleChange = event => {\n    const { value, name } = event.target;\n    if (name === 'email') {\n      setEmail(value);\n    } else if (name === 'password') {\n      setPassword(value);\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} onSubmit={handleSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            onChange={handleChange}\n            value={email}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={handleChange}\n            value={password}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          <Button\n            type=\"button\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={googleSignInStart}\n          >\n            Sign In With Google\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"#\" variant=\"body2\" component={RouterLink} to=\"/sign-up\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) =>\n    dispatch(emailSignInStart({ email, password }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","import React, { useEffect } from 'react';\n\nimport { CssBaseline } from '@material-ui/core';\n\nimport Header from './components/header/header.component';\nimport HomePage from './pages/homepage/homepage.component';\nimport LeftDrawer from './components/left-drawer/left-drawer.component';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport SignUp from './pages/sign-up/sign-up.component';\nimport SignIn from './pages/sign-in/sign-in.component';\nimport { createStructuredSelector } from 'reselect';\nimport { selectCurrentUser } from './redux/user/user.selectors';\nimport { connect } from 'react-redux';\nimport { checkUserSession } from './redux/user/user.actions';\n\nfunction App({ currentUser, checkUserSession }) {\n  useEffect(() => {\n    checkUserSession();\n  }, [checkUserSession]);\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Header />\n      <LeftDrawer />\n      <Switch>\n        <Route exact path=\"/sign-in\" render={() => currentUser ? <Redirect to='/' /> : <SignIn />} />\n        <Route exact path=\"/sign-up\" render={() => currentUser ? <Redirect to='/' /> : <SignUp /> } />\n        <Route path=\"/\" component={HomePage} />\n      </Switch>\n    </React.Fragment>\n  );\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n  checkUserSession: () => dispatch(checkUserSession())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import PlannerActionTypes from './planner.types';\n\nconst INITIAL_STATE = {\n  originList: [],\n  destList: [],\n  origin: '',\n  dest: '',\n  directions: null,\n  selectedRoute: 0\n};\n\nconst plannerReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case PlannerActionTypes.AUTOCOMPLETE_SUCCESS:\n      if (action.payload.source === 'origin') {\n        return {\n          ...state,\n          originList: action.payload.places\n        }\n      } else {\n        return {\n          ...state,\n          destList: action.payload.places\n        }\n      }\n    case PlannerActionTypes.SET_ORIGIN:\n      return {\n        ...state,\n        origin: action.payload\n      };\n    case PlannerActionTypes.SET_DEST:\n      return {\n        ...state,\n        dest: action.payload\n      };\n    case PlannerActionTypes.DIRECTIONS_SUCCESS:\n      return {\n        ...state,\n        directions: action.payload\n      };\n    case PlannerActionTypes.SWITCH_AUTOCOMPLETE_OPTIONS:\n      const temp = state.destList;\n      return {\n        ...state,\n        destList: state.originList,\n        originList: temp\n      };\n    case PlannerActionTypes.SELECT_ROUTE:\n      return {\n        ...state,\n        selectedRoute: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nexport default plannerReducer;\n","import DrawerActionTypes from './drawer.types';\n\nconst INITIAL_STATE = {\n  open: false\n};\n\nconst drawerReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case DrawerActionTypes.TOGGLE_DRAWER:\n      return {\n        ...state,\n        open: !state.open\n      };\n    default:\n      return state;\n  }\n}\n\nexport default drawerReducer;","import UserActionTypes from './user.types';\n\nconst INITIAL_STATE = {\n  currentUser: null,\n  error: null\n};\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case UserActionTypes.SIGN_IN_SUCCESS:\n      return {\n        ...state,\n        currentUser: action.payload,\n        error: null\n      };\n    case UserActionTypes.SIGN_OUT_SUCCESS:\n      return {\n        ...state,\n        currentUser: null,\n        error: null\n      };\n    case UserActionTypes.SIGN_IN_FAILURE:\n    case UserActionTypes.SIGN_OUT_FAILURE:\n    case UserActionTypes.SIGN_UP_FAILURE:\n      return {\n        ...state,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;","import { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport plannerReducer from './planner/planner.reducer';\nimport drawerReducer from './drawer/drawer.reducer';\nimport userReducer from './user/user.reducer';\n\nconst persistConfig = {\n  key: 'dublinbus',\n  storage,\n  whitelist: []\n}\n\nconst rootReducer = combineReducers({\n  planner: plannerReducer,\n  drawer: drawerReducer,\n  user: userReducer\n});\n\nexport default persistReducer(persistConfig, rootReducer);","import { takeLatest, put, all, call } from 'redux-saga/effects';\n\nimport PlannerActionTypes from './planner.types';\nimport { autocompleteFailure, autocompleteSuccess, directionsFailure, directionsSuccess } from './planner.actions';\n\n\nfunction* autocomplete({ payload: { input, source } }) {\n  if (input === \"\") {\n    yield put(autocompleteSuccess([]));\n  } else {\n    const service = new window.google.maps.places.AutocompleteService();\n    const promise = new Promise((resolve, reject) => {\n      service.getPlacePredictions({ input: input, location: new window.google.maps.LatLng({ lat: 53.4321, lng: -6.2759 }), radius: 11000 }, (predictions, status) => {\n        if (status === window.google.maps.places.PlacesServiceStatus.OK) {\n          resolve(predictions);\n        } else {\n          reject(status);\n        }\n      })\n    });\n\n    try {\n      const response = yield promise;\n      const places = response\n        .filter(places => places.description.includes('Dublin'));\n\n      yield put(autocompleteSuccess(places, source));\n    } catch(error) {\n      yield put(autocompleteFailure(error));\n    }\n  }\n}\n\nfunction* getDirections({ payload: { origin, dest } }) {\n  const directionsService = new window.google.maps.DirectionsService();\n  const promise = new Promise((resolve, reject) => {\n       directionsService.route({origin: origin, destination: dest, travelMode: 'TRANSIT', provideRouteAlternatives: true, transitOptions: {modes: ['BUS']}, region: 'ie'},\n         (response, status) => {\n            if (status === 'OK') {\n              resolve(response);\n            } else {\n              reject(status);\n            }\n         });\n  });\n\n  try {\n    const routes = yield promise;\n    yield call(console.log, routes);\n    yield put(directionsSuccess(routes));\n  } catch (error) {\n    yield put(directionsFailure(error));\n  }\n}\n\nexport function* onAutoCompleteStart() {\n  yield takeLatest(PlannerActionTypes.AUTOCOMPLETE_START, autocomplete);\n}\n\nexport function* onDirectionsStart() {\n  yield takeLatest(PlannerActionTypes.DIRECTIONS_START, getDirections);\n}\n\nexport function* plannerSagas() {\n  yield all([call(onAutoCompleteStart), call(onDirectionsStart)]);\n}","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyByjnEM_ekzXHI-o2YiQJKRxJqQ-Gpog8o\",\n  authDomain: \"dublinbus-28165.firebaseapp.com\",\n  databaseURL: \"https://dublinbus-28165.firebaseio.com\",\n  projectId: \"dublinbus-28165\",\n  storageBucket: \"dublinbus-28165.appspot.com\",\n  messagingSenderId: \"937477462671\",\n  appId: \"1:937477462671:web:ed7a495f327b0380e7aefa\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\n\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore()\n\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({ prompt: 'select_account' });\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\n\nexport default firebase;\n","import { takeLatest, put, all, call } from 'redux-saga/effects';\n\nimport UserActionTypes from './user.types';\n\nimport {\n  signInSuccess,\n  signInFailure,\n  signOutSuccess,\n  signOutFailure,\n  signUpSuccess,\n  signUpFailure\n} from './user.actions';\n\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument,\n  getCurrentUser\n} from '../../firebase/firebase.utils';\n\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(\n      createUserProfileDocument,\n      userAuth,\n      additionalData\n    );\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\n\nexport function* signUp({ payload: { email, password, displayName } }) {\n  try {\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({ user, additionalData: { displayName } }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\n\nexport function* signInAfterSignUp({ payload: { user, additionalData } }) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\n\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\n\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\n\nexport function* userSagas() {\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart),\n    call(onCheckUserSession),\n    call(onSignOutStart),\n    call(onSignUpStart),\n    call(onSignUpSuccess)\n  ]);\n}\n","import { all, call } from 'redux-saga/effects';\nimport { plannerSagas } from './planner/planner.sagas';\nimport { userSagas } from './user/user.sagas';\n\nfunction* rootSaga() {\n  yield all([call(plannerSagas), call(userSagas)]);\n}\n\nexport default rootSaga;","import createSagaMiddleware from 'redux-saga';\nimport { persistStore } from 'redux-persist';\n\nimport logger from 'redux-logger';\nimport rootReducer from './root-reducer';\nimport rootSaga from './root-saga';\nimport { createStore, applyMiddleware } from 'redux';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nsagaMiddleware.run(rootSaga);\nexport const persistor = persistStore(store);\nexport default { store, persistStore };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <PersistGate persistor={persistor}>\n        <App />\n      </PersistGate>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n","import DrawerActionTypes from './drawer.types';\n\nexport const toggleDrawer = () => ({\n  type: DrawerActionTypes.TOGGLE_DRAWER\n});","const DrawerActionTypes = {\n  TOGGLE_DRAWER: 'TOGGLE_DRAWER'\n};\n\nexport default DrawerActionTypes;"],"sourceRoot":""}