{"version":3,"sources":["components/header/header.component.jsx","redux/planner/planner.selector.js","redux/planner/planner.types.js","redux/planner/planner.actions.js","components/map-container/map-container.component.jsx","components/form-input/form-input.component.jsx","components/route-card/route-card.component.jsx","components/routes-list/routes-list.component.jsx","components/planner/planner.component.jsx","pages/homepage/homepage.component.jsx","pages/sign-up/sign-up.component.jsx","pages/sign-in/sign-in.component.jsx","App.js","redux/planner/planner.reducer.js","redux/drawer/drawer.reducer.js","redux/root-reducer.js","redux/planner/planner.sagas.js","redux/root-saga.js","redux/store.js","index.js","redux/drawer/drawer.action.js","redux/drawer/drawer.types.js","components/left-drawer/left-drawer.component.jsx","redux/drawer/drawer.selectors.js"],"names":["useStyles","makeStyles","theme","title","textDecoration","color","palette","primary","contrastText","menuButton","marginRight","spacing","signInButton","marginLeft","mapStateToProps","createStructuredSelector","connect","dispatch","toggleDrawer","props","classes","Fragment","AppBar","position","className","appBar","Toolbar","toolBar","IconButton","edge","onClick","Typography","variant","component","RouterLink","to","Button","selectPlanner","state","planner","selectOriginPlaces","createSelector","originList","selectOriginPredictions","places","map","place","description","selectDestPlaces","destList","selectDestPredictions","selectOrigin","origin","selectDest","dest","selectDirections","directions","selectRoutes","routes","selectPolylines","route","overview_path","path","lat","lng","selectSelectedRoute","selectedRoute","PlannerActionTypes","AUTOCOMPLETE_START","AUTOCOMPLETE_SUCCESS","AUTOCOMPLETE_FAILURE","SET_ORIGIN","SET_DEST","DIRECTIONS_START","DIRECTIONS_SUCCESS","DIRECTIONS_FAILURE","SWITCH_AUTOCOMPLETE_OPTIONS","SELECT_ROUTE","autocompleteSuccess","source","type","payload","selectRoute","routeId","containerStyle","height","width","zIndex","center","polylines","google","window","initialCenter","zoom","disableDefaultUI","polyline","index","key","strokeColor","strokeWeight","card","padding","input","switchButton","right","top","submitButton","originPredictions","destPredictions","startAutocomplete","autocompleteStart","setOrigin","setDest","startDirections","directionsStart","switchAutocompleteOptions","Card","Fab","switchOriginDest","Grid","container","direction","alignItems","item","Autocomplete","freeSolo","options","inputValue","renderInput","params","TextField","label","onInputChange","event","value","id","defaultValue","dayjs","format","InputLabelProps","shrink","clsx","pContainer","display","flexDirection","p","RouteCard","steps","clickHandler","CardActionArea","step","instructions","travel_mode","transit","line","short_name","stepToDescription","routeID","legs","Planner","paperContainer","overflowX","overflowY","breakpoints","down","overflow","HomePage","Paper","elevation","Hidden","xsDown","paper","marginTop","avatar","margin","backgroundColor","secondary","main","form","submit","SignUp","Container","maxWidth","Avatar","xs","sm","autoComplete","name","required","fullWidth","autoFocus","justify","Link","href","SignIn","App","CssBaseline","exact","INITIAL_STATE","plannerReducer","action","temp","open","drawerReducer","DrawerActionTypes","TOGGLE_DRAWER","rootReducer","combineReducers","drawer","autocomplete","getDirections","onAutoCompleteStart","onDirectionsStart","plannerSagas","put","service","maps","AutocompleteService","promise","Promise","resolve","reject","getPlacePredictions","location","LatLng","radius","predictions","status","PlacesServiceStatus","OK","response","filter","includes","error","directionsService","DirectionsService","destination","travelMode","provideRouteAlternatives","transitOptions","modes","region","call","console","log","takeLatest","all","rootSaga","sagaMiddleware","createSagaMiddleware","middlewares","store","createStore","applyMiddleware","run","ReactDOM","render","document","getElementById","list","selectDrawerOpen","iOS","process","browser","test","navigator","userAgent","anchor","onClose","onOpen","disableBackdropTransition","disableDiscovery","role","onKeyDown","button"],"mappings":"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","file":"static/js/main.9f4850d7.chunk.js","sourcesContent":["import React from 'react';\nimport { AppBar, IconButton, Toolbar, Typography, makeStyles } from '@material-ui/core';\nimport  MenuIcon from '@material-ui/icons/Menu';\nimport Button from '@material-ui/core/Button';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { toggleDrawer } from '../../redux/drawer/drawer.action';\nimport { Link as RouterLink } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    textDecoration: 'none',\n    color: theme.palette.primary.contrastText\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  signInButton: {\n    marginLeft: 'auto'\n  }\n}));\n\nfunction Header(props) {\n  const { toggleDrawer } = props;\n\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar className={classes.toolBar}>\n          <IconButton edge=\"start\" className={classes.menuButton} onClick={toggleDrawer}>\n            <MenuIcon />\n          </IconButton>\n        <Typography variant=\"h6\" className={classes.title} component={RouterLink} to=\"/\">Dublin Bus</Typography>\n        <Button color=\"inherit\" className={classes.signInButton} component={RouterLink} to=\"/sign-in\">Sign In</Button>\n      </Toolbar>\n    </AppBar>\n      <Toolbar />\n    </React.Fragment>\n  );\n}\n\nconst mapStateToProps = createStructuredSelector({\n\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleDrawer: () => dispatch(toggleDrawer())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import { createSelector } from 'reselect';\n\nconst selectPlanner = state => state.planner;\n\nexport const selectOriginPlaces = createSelector(\n  [selectPlanner],\n  planner => planner.originList\n);\n\nexport const selectOriginPredictions = createSelector(\n  [selectOriginPlaces],\nplaces => places.map(place => place.description)\n);\n\nexport const selectDestPlaces = createSelector(\n  [selectPlanner],\n  planner => planner.destList\n);\n\nexport const selectDestPredictions = createSelector(\n  [selectDestPlaces],\n  places => places.map(place => place.description)\n);\n\nexport const selectOrigin = createSelector(\n  [selectPlanner],\n  planner => planner.origin\n);\n\nexport const selectDest = createSelector(\n  [selectPlanner],\n  planner => planner.dest\n);\n\nexport const selectDirections = createSelector(\n  [selectPlanner] ,\n  planner => planner.directions\n);\n\nexport const selectRoutes = createSelector(\n  [selectDirections],\n  directions => (directions ? directions.routes : [])\n);\n\nexport const selectPolylines = createSelector(\n  [selectRoutes],\n  routes => routes.map(route => route.overview_path.map(path => ({ lat: path.lat(), lng: path.lng() })))\n);\n\nexport const selectSelectedRoute = createSelector(\n  [selectPlanner],\n  planner => planner.selectedRoute\n);","const PlannerActionTypes = {\n  AUTOCOMPLETE_START: 'AUTOCOMPLETE_START',\n  AUTOCOMPLETE_SUCCESS: 'AUTOCOMPLETE_SUCCESS',\n  AUTOCOMPLETE_FAILURE: 'AUTOCOMPLETE_FAILURE',\n  SET_ORIGIN: 'SET_ORIGIN',\n  SET_DEST: 'SET_DEST',\n  DIRECTIONS_START: 'DIRECTIONS_START',\n  DIRECTIONS_SUCCESS: 'DIRECTIONS_SUCCESS',\n  DIRECTIONS_FAILURE: 'DIRECTIONS_FAILURE',\n  SWITCH_AUTOCOMPLETE_OPTIONS: 'SWITCH_AUTOCOMPLETE_OPTIONS',\n  SELECT_ROUTE: 'SELECT_ROUTE'\n};\n\nexport default PlannerActionTypes;","import PlannerActionTypes from './planner.types';\n\nexport const autocompleteStart = (input, source) => ({\n  type: PlannerActionTypes.AUTOCOMPLETE_START,\n  payload: { input, source }\n});\n\nexport const autocompleteSuccess = (places, source) => ({\n  type: PlannerActionTypes.AUTOCOMPLETE_SUCCESS,\n  payload: { places, source }\n});\n\nexport const autocompleteFailure = error => ({\n  type: PlannerActionTypes.AUTOCOMPLETE_FAILURE,\n  payload: error\n});\n\nexport const setOrigin = origin => ({\n  type: PlannerActionTypes.SET_ORIGIN,\n  payload: origin\n});\n\nexport const setDest = dest => ({\n  type: PlannerActionTypes.SET_DEST,\n  payload: dest\n});\n\nexport const directionsStart = (origin, dest) => ({\n  type: PlannerActionTypes.DIRECTIONS_START,\n  payload: {\n    origin: origin,\n    dest: dest\n  }\n});\n\nexport const directionsSuccess = directions => ({\n  type: PlannerActionTypes.DIRECTIONS_SUCCESS,\n  payload: directions\n});\n\nexport const directionsFailure = error => ({\n  type: PlannerActionTypes.DIRECTIONS_START,\n  payload: error\n});\n\nexport const switchAutocompleteOptions = () => ({\n  type: PlannerActionTypes.SWITCH_AUTOCOMPLETE_OPTIONS\n});\n\nexport const selectRoute = routeId => ({\n  type: PlannerActionTypes.SELECT_ROUTE,\n  payload: routeId\n});\n","import React from 'react';\n\n// import { GoogleMap, LoadScript } from '@react-google-maps/api';\nimport { GoogleApiWrapper, Map, Polyline } from 'google-maps-react';\nimport { createStructuredSelector } from 'reselect';\nimport { selectPolylines, selectSelectedRoute } from '../../redux/planner/planner.selector';\nimport { connect } from 'react-redux';\nimport { selectRoute } from '../../redux/planner/planner.actions';\n\n// const apiKey = 'AIzaSyBPyIqf7hOMSCjqSq--50UKiJ9Xzmbssmk';\n\nconst containerStyle = {\n  position: 'fixed',\n  height: '100vh',\n  width: '100vw',\n  zIndex: -1\n};\n\nconst center = {\n  lat: 53.3363,\n  lng: -6.2769\n};\n\n\nfunction MapContainer(props) {\n  const { polylines, selectRoute, selectedRoute } = props;\n  return(\n    <Map google={window.google} containerStyle={containerStyle} initialCenter={center} zoom={13} disableDefaultUI={true}>\n      { polylines.map((polyline, index) => <Polyline key={index} path={polyline} zIndex={index === selectedRoute ? 1 : 0} strokeColor={index === selectedRoute ? '#669DF6' : '#BBBDBF'} strokeWeight={6} onClick={() => selectRoute(index)}/>) }\n    </Map>\n  );\n}\n\nconst mapStateToProps = createStructuredSelector({\n  polylines: selectPolylines,\n  selectedRoute: selectSelectedRoute\n});\n\nconst mapDispatchToProps = dispatch => ({\n  selectRoute: routeId => dispatch(selectRoute(routeId)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MapContainer);\n","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport ImportExportIcon from '@material-ui/icons/ImportExport';\nimport Button from '@material-ui/core/Button';\nimport { connect } from 'react-redux';\nimport {\n  autocompleteStart,\n  setDest,\n  setOrigin,\n  directionsStart,\n  switchAutocompleteOptions\n} from '../../redux/planner/planner.actions';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { createStructuredSelector } from 'reselect';\nimport {\n  selectDest, selectDestPredictions,\n  selectOrigin,\n  selectOriginPredictions,\n} from '../../redux/planner/planner.selector';\nimport Card from '@material-ui/core/Card';\nimport Fab from '@material-ui/core/Fab';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport * as dayjs from 'dayjs';\n\nconst useStyles = makeStyles({\n  card: {\n    padding: '16px 0'\n  },\n  input: {\n    width: '340px',\n  },\n  switchButton: {\n    position: 'absolute',\n    right: '7px',\n    top: '50px',\n    zIndex: 1\n  },\n  submitButton: {\n    height: '56px'\n  }\n});\n\nfunction FormInput(props) {\n  const {\n          startAutocomplete,\n          setOrigin,\n          setDest,\n          originPredictions,\n          destPredictions,\n          startDirections,\n          origin,\n          dest,\n          switchAutocompleteOptions\n        } = props;\n\n  const classes = useStyles();\n\n  function localTimeToISOString() {\n    return dayjs().format('YYYY-MM-DDTHH:mm:ss');\n  }\n\n  function originHandler(event, value) {\n    setOrigin(value);\n    startAutocomplete(value, 'origin');\n  }\n\n  function destHandler(event, value) {\n    setDest(value);\n    startAutocomplete(value, 'dest');\n  }\n\n  function switchOriginDest(origin, dest) {\n    setDest(origin);\n    setOrigin(dest);\n    switchAutocompleteOptions();\n  }\n\n  return (\n    <Card variant=\"outlined\" className={classes.card}>\n      <Fab color=\"primary\" className={classes.switchButton} onClick={() => switchOriginDest(origin, dest)}>\n        <ImportExportIcon />\n      </Fab>\n      <Grid container direction=\"column\" alignItems=\"center\" spacing={1}>\n        <Grid item>\n          <Autocomplete\n            freeSolo\n            options={originPredictions}\n            inputValue={origin}\n            renderInput={params => <TextField {...params} label=\"Origin\" variant=\"outlined\" />}\n            onInputChange={originHandler}\n            className={classes.input}\n          />\n        </Grid>\n        <Grid item>\n          <Autocomplete\n            freeSolo\n            options={destPredictions}\n            inputValue={dest}\n            renderInput={params => <TextField {...params} label=\"Destination\" variant=\"outlined\" />}\n            onInputChange={destHandler}\n            className={classes.input}\n          />\n        </Grid>\n        <Grid item>\n          <TextField\n            id=\"datetime-local\"\n            label=\"Depart at\"\n            type=\"datetime-local\"\n            defaultValue={localTimeToISOString()}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            variant=\"outlined\"\n            className={classes.input}\n          />\n        </Grid>\n        <Grid item>\n          <Button variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => startDirections(origin, dest)}\n                  className={clsx(classes.input, classes.submitButton)}\n          >\n            Submit\n          </Button>\n        </Grid>\n      </Grid>\n    </Card>\n  );\n}\n\nconst mapStateToProps = createStructuredSelector({\n  originPredictions: selectOriginPredictions,\n  destPredictions: selectDestPredictions,\n  origin: selectOrigin,\n  dest: selectDest\n});\n\nconst mapDispatchToProps = dispatch => ({\n  startAutocomplete: (input, source) => dispatch(autocompleteStart(input, source)),\n  setOrigin: origin => dispatch(setOrigin(origin)),\n  setDest: dest => dispatch(setDest(dest)),\n  startDirections: (origin, dest) => dispatch(directionsStart(origin, dest)),\n  switchAutocompleteOptions: () => dispatch(switchAutocompleteOptions())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormInput);","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  pContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  p: {\n    width: '340px'\n  }\n});\n\nfunction RouteCard(props) {\n  const { steps, clickHandler } = props;\n\n  const classes = useStyles();\n\n  function stepToDescription(step) {\n    let instructions = step.instructions;\n    if (step.travel_mode === 'TRANSIT') {\n      instructions += ', ' + step.transit.line.short_name;\n    }\n    return instructions;\n  }\n\n  return (\n    <Card variant=\"outlined\">\n      <CardActionArea onClick={clickHandler}>\n        <div className={classes.pContainer}>\n        { steps.map((step, index) => (<Typography variant=\"body1\" key={index} className={classes.p}>{stepToDescription(step)}</Typography>)) }\n        </div>\n      </CardActionArea>\n    </Card>\n  );\n}\n\n\nexport default RouteCard;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport Grid from '@material-ui/core/Grid';\nimport RouteCard from '../route-card/route-card.component';\nimport { selectRoutes } from '../../redux/planner/planner.selector';\nimport { selectRoute } from '../../redux/planner/planner.actions';\n\nfunction RoutesList(props) {\n  const { routes, selectRoute } = props;\n  return (\n    <React.Fragment>\n      {routes.map((route, index) => (<Grid item key={index}><RouteCard steps={route.legs[0].steps} clickHandler={() => selectRoute(index)}/> </Grid>))}\n    </React.Fragment>\n  );\n}\n\nconst mapStateToProps = createStructuredSelector({\n  routes: selectRoutes\n});\n\nconst mapDispatchToProps = dispatch => ({\n  selectRoute: routeID => dispatch(selectRoute(routeID))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RoutesList);","import React from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport Grid from '@material-ui/core/Grid';\nimport RoutesList from '../routes-list/routes-list.component';\n\nfunction Planner(props) {\n  return (\n    <Grid container direction=\"column\">\n      <Grid item>\n        <FormInput />\n      </Grid>\n      <RoutesList />\n    </Grid>\n  );\n}\n\nexport default Planner;","import React from 'react';\nimport MapContainer from '../../components/map-container/map-container.component';\nimport Hidden from '@material-ui/core/Hidden';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Planner from '../../components/planner/planner.component';\n\nconst useStyles = makeStyles(theme => ({\n  paperContainer: {\n    position: 'fixed',\n    width: '400px',\n    height: 'calc(100% - 64px)',\n    overflowX: 'hidden',\n    overflowY: 'auto',\n    [theme.breakpoints.down('xs')]: {\n      position: 'relative',\n      width: '100%',\n      height: 'calc(100% - 48px)',\n      overflow: 'visible'\n    }\n  }\n}));\n\nfunction HomePage(props) {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Paper elevation={0} className={classes.paperContainer}>\n        <Planner />\n      </Paper>\n      <Hidden xsDown>\n        <MapContainer />\n      </Hidden>\n    </React.Fragment>\n  );\n}\n\nexport default HomePage;","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { Link as RouterLink } from 'react-router-dom';\n\n// This component is adapted from a material-ui template\n// https://github.com/mui-org/material-ui/blob/master/docs/src/pages/getting-started/templates/sign-up/SignUp.js\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignUp() {\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                autoComplete=\"lname\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"#\" variant=\"body2\" component={RouterLink} to=\"/sign-in\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n}","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nimport { Link as RouterLink } from 'react-router-dom';\n\n// This component is adapted from a material-ui template\n// https://github.com/mui-org/material-ui/blob/master/docs/src/pages/getting-started/templates/sign-in/SignIn.js\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 0),\n  },\n}));\n\nexport default function SignIn() {\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In With Google\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"#\" variant=\"body2\" component={RouterLink} to=\"/sign-up\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n}","import React from 'react';\n\nimport { CssBaseline } from '@material-ui/core';\n\nimport Header from './components/header/header.component';\nimport HomePage from './pages/homepage/homepage.component';\nimport LeftDrawer from './components/left-drawer/left-drawer.component';\nimport { Switch, Route } from 'react-router-dom';\nimport SignUp from './pages/sign-up/sign-up.component';\nimport SignIn from './pages/sign-in/sign-in.component';\n\nfunction App(props) {\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Header />\n      <LeftDrawer />\n      <Switch>\n        <Route exact path=\"/sign-in\" component={SignIn} />\n        <Route exact path=\"/sign-up\" component={SignUp} />\n        <Route path=\"/\" component={HomePage} />\n      </Switch>\n    </React.Fragment>\n  );\n}\nexport default App;\n","import PlannerActionTypes from './planner.types';\n\nconst INITIAL_STATE = {\n  originList: [],\n  destList: [],\n  origin: '',\n  dest: '',\n  directions: null,\n  selectedRoute: 0\n};\n\nconst plannerReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case PlannerActionTypes.AUTOCOMPLETE_SUCCESS:\n      if (action.payload.source === 'origin') {\n        return {\n          ...state,\n          originList: action.payload.places\n        }\n      } else {\n        return {\n          ...state,\n          destList: action.payload.places\n        }\n      }\n    case PlannerActionTypes.SET_ORIGIN:\n      return {\n        ...state,\n        origin: action.payload\n      };\n    case PlannerActionTypes.SET_DEST:\n      return {\n        ...state,\n        dest: action.payload\n      };\n    case PlannerActionTypes.DIRECTIONS_SUCCESS:\n      return {\n        ...state,\n        directions: action.payload\n      };\n    case PlannerActionTypes.SWITCH_AUTOCOMPLETE_OPTIONS:\n      const temp = state.destList;\n      return {\n        ...state,\n        destList: state.originList,\n        originList: temp\n      };\n    case PlannerActionTypes.SELECT_ROUTE:\n      return {\n        ...state,\n        selectedRoute: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nexport default plannerReducer;\n","import DrawerActionTypes from './drawer.types';\n\nconst INITIAL_STATE = {\n  open: false\n};\n\nconst drawerReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case DrawerActionTypes.TOGGLE_DRAWER:\n      return {\n        ...state,\n        open: !state.open\n      };\n    default:\n      return state;\n  }\n}\n\nexport default drawerReducer;","import { combineReducers } from 'redux';\n\nimport plannerReducer from './planner/planner.reducer';\nimport drawerReducer from './drawer/drawer.reducer';\n\nconst rootReducer = combineReducers({\n  planner: plannerReducer,\n  drawer: drawerReducer\n});\n\nexport default rootReducer;","import { takeLatest, put, all, call } from 'redux-saga/effects';\n\nimport PlannerActionTypes from './planner.types';\nimport { autocompleteFailure, autocompleteSuccess, directionsFailure, directionsSuccess } from './planner.actions';\n\n\nfunction* autocomplete({ payload: { input, source } }) {\n  if (input === \"\") {\n    yield put(autocompleteSuccess([]));\n  } else {\n    const service = new window.google.maps.places.AutocompleteService();\n    const promise = new Promise((resolve, reject) => {\n      service.getPlacePredictions({ input: input, location: new window.google.maps.LatLng({ lat: 53.4321, lng: -6.2759 }), radius: 11000 }, (predictions, status) => {\n        if (status === window.google.maps.places.PlacesServiceStatus.OK) {\n          resolve(predictions);\n        } else {\n          reject(status);\n        }\n      })\n    });\n\n    try {\n      const response = yield promise;\n      const places = response\n        .filter(places => places.description.includes('Dublin'));\n\n      yield put(autocompleteSuccess(places, source));\n    } catch(error) {\n      yield put(autocompleteFailure(error));\n    }\n  }\n}\n\nfunction* getDirections({ payload: { origin, dest } }) {\n  const directionsService = new window.google.maps.DirectionsService();\n  const promise = new Promise((resolve, reject) => {\n       directionsService.route({origin: origin, destination: dest, travelMode: 'TRANSIT', provideRouteAlternatives: true, transitOptions: {modes: ['BUS']}, region: 'ie'},\n         (response, status) => {\n            if (status === 'OK') {\n              resolve(response);\n            } else {\n              reject(status);\n            }\n         });\n  });\n\n  try {\n    const routes = yield promise;\n    yield call(console.log, routes);\n    yield put(directionsSuccess(routes));\n  } catch (error) {\n    yield put(directionsFailure(error));\n  }\n}\n\nexport function* onAutoCompleteStart() {\n  yield takeLatest(PlannerActionTypes.AUTOCOMPLETE_START, autocomplete);\n}\n\nexport function* onDirectionsStart() {\n  yield takeLatest(PlannerActionTypes.DIRECTIONS_START, getDirections);\n}\n\nexport function* plannerSagas() {\n  yield all([call(onAutoCompleteStart), call(onDirectionsStart)]);\n}","import { all, call } from 'redux-saga/effects';\nimport { plannerSagas } from './planner/planner.sagas';\n\nfunction* rootSaga() {\n  yield all([call(plannerSagas)]);\n}\n\nexport default rootSaga;","import createSagaMiddleware from 'redux-saga';\n\nimport logger from 'redux-logger';\nimport rootReducer from './root-reducer';\nimport rootSaga from './root-saga';\nimport { createStore, applyMiddleware } from 'redux';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport  { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n","import DrawerActionTypes from './drawer.types';\n\nexport const toggleDrawer = () => ({\n  type: DrawerActionTypes.TOGGLE_DRAWER\n});","const DrawerActionTypes = {\n  TOGGLE_DRAWER: 'TOGGLE_DRAWER'\n};\n\nexport default DrawerActionTypes;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport { selectDrawerOpen } from '../../redux/drawer/drawer.selectors';\nimport { toggleDrawer } from '../../redux/drawer/drawer.action';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport BookmarksIcon from '@material-ui/icons/Bookmarks';\nimport DirectionsBusIcon from '@material-ui/icons/DirectionsBus';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  }\n});\n\nfunction LeftDrawer(props) {\n  const { open, toggleDrawer } = props;\n\n  const classes = useStyles();\n\n  const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n\n  const list = () => (\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      onClick={toggleDrawer}\n      onKeyDown={toggleDrawer}\n    >\n      <List>\n        <ListItem button component={Link} to=\"/\">\n          <ListItemIcon>\n            <DirectionsBusIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Planner\" />\n        </ListItem>\n        <ListItem button component={Link} to=\"/saved\">\n          <ListItemIcon>\n            <BookmarksIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Saved\" />\n        </ListItem>\n        <ListItem button component={Link} to=\"/timetables\">\n          <ListItemIcon>\n            <AccessTimeIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Timetables\" />\n        </ListItem>\n      </List>\n      <Divider />\n    </div>\n  );\n\n  return (\n      <React.Fragment>\n        <SwipeableDrawer\n          anchor={'left'}\n          open={open}\n          onClose={toggleDrawer}\n          onOpen={toggleDrawer}\n          disableBackdropTransition={!iOS}\n          disableDiscovery={iOS}\n        >\n          {list()}\n        </SwipeableDrawer>\n      </React.Fragment>\n  );\n}\n\nconst mapStateToProps = createStructuredSelector({\n  open: selectDrawerOpen\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleDrawer: () => dispatch(toggleDrawer())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LeftDrawer);","import { createSelector } from 'reselect';\n\nconst selectDrawer = state => state.drawer;\n\nexport const selectDrawerOpen = createSelector(\n  [selectDrawer],\n  drawer => drawer.open\n);"],"sourceRoot":""}